{"version":3,"sources":["null","ng://angular2-grid/helpers/NgGridHelpers.ts","ng://angular2-grid/components/NgGridPlaceholder.ts","ng://angular2-grid/directives/NgGrid.ts","ng://angular2-grid/directives/NgGridItem.ts","ng://angular2-grid/modules/NgGrid.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","sortItemsByPositionHorizontal","a","b","col","row","sortItemsByPositionVertical","NgGridPlaceholder","_ngEl","_renderer","this","prototype","registerGrid","ngGrid","_ngGrid","ngOnInit","setElementClass","nativeElement","autoStyle","setElementStyle","setSize","newSize","_size","_recalculateDimensions","setGridPosition","newPosition","_position","_recalculatePosition","setCascadeMode","cascade","_cascadeMode","_setDimensions","w","h","_setPosition","x","y","colWidth","marginLeft","marginRight","screenMargin","rowHeight","marginTop","marginBottom","Component","args","selector","template","ElementRef","Renderer","NgGrid","_differs","componentFactoryResolver","onDragStart","EventEmitter","onDrag","onDragStop","onResizeStart","onResize","onResizeStop","onItemChange","minCols","minRows","isDragging","isResizing","resizeEnable","dragEnable","minWidth","minHeight","_items","Map","_draggingItem","_resizingItem","_resizeDirection","_itemsInGrid","Set","_maxCols","_maxRows","_visibleCols","_visibleRows","_setWidth","_setHeight","_posOffset","_adding","_placeholderRef","_fixToGrid","_autoResize","_destroyed","_maintainRatio","_preferNew","_zoomOnDrag","_limitToScreen","_centerToScreen","_curMaxRow","_curMaxCol","_dragReady","_resizeReady","_elementBasedDynamicRowHeight","_itemFixDirection","_collisionFixDirection","_subscriptions","_enabledListener","_config","CONST_DEFAULT_CONFIG","_defineListeners","Object","defineProperty","v","setConfig","_differ","find","create","diff","ngOnDestroy","_disableListeners","generateItemUid","uid","generateUuid","replace","c","r","Math","random","toString","NgGridHelper.generateUuid","has","config","_this","maxColRowChanged","val","intVal","parseInt","setMargins","max","_cascadeGrid","_enableListeners","_getFixDirectionFromCascade","newMaxCols","_getContainerColumns","_getScreenMargin","_aspectRatio","_updatePositionsAfterMaxChange","_calculateColWidth","_calculateRowHeight","maxWidth","maxHeight","ceil","_updateRatio","forEach","item","_removeFromGrid","recalculateSelf","_addToGrid","_updateSize","getItemPosition","itemId","get","getGridPosition","getItemSize","getSize","ngDoCheck","changes","_applyChanges","margins","enableDrag","disableDrag","enableResize","disableResize","addItem","ngItem","newPos","_fixGridPosition","set","triggerCascade","then","onCascadeEvent","_emitOnItemChange","removeItem","delete","updateItem","_cascadePromise","Promise","resolve","setTimeout","triggerResize","resizeEventHandler","e","newMaxColumns","mouseDownEventHandler","mousePos","_getMousePosition","_getItemFromPosition","resizeDirection","canResize","preventDefault","canDrag","itemPos","getPosition","left","top","mouseUpEventHandler","_dragStop","_resizeStop","_cleanDrag","_cleanResize","mouseMoveEventHandler","_resizeStart","_dragStart","_drag","_resize","onMouseMove","pos","dims","_hasGridCollision","_isWithinBounds","maxCols","getBoundingClientRect","width","floor","min_cols","maxRows","height","window","innerHeight","min_rows","forEachAddedItem","record","key","currentValue","forEachChangedItem","forEachRemovedItem","startMoving","_createPlaceholder","emit","onResizeStartEvent","onDragStartEvent","_zoomOut","_resetZoom","getSelection","empty","removeAllRanges","selection","newL","newT","gridPos","_calculateGridPosition","_fixPosToBoundsX","_isWithinBoundsY","_fixPosToBoundsY","instance","indexOf","_fixGridCollisions","setPosition","onDragEvent","itemDims","getDimensions","endCorner","resizeTop","includes","resizeBottom","resizeLeft","newW","newH","newX","newY","calcSize","_calculateGridSize","itemSize","iGridPos","bottomRightCorner","targetPos","assign","_isWithinBoundsX","_fixSizeToBoundsX","_fixSizeToBoundsY","fixResize","setDimensions","onResizeEvent","stopMoving","onDragStopEvent","destroy","onResizeStopEvent","sizex","round","sizey","positions","_getCollisions","some","returns","leftCol","rightCol","topRow","bottomRow","itemLeftCol","itemRightCol","itemTopRow","itemBottomRow","push","collisions","collisions_1","tslib_1.__values","collisions_1_1","collision","newItemPos","Error","itemsInGrid","Array","from","sort","NgGridHelper.sortItemsByPositionVertical","lowestRowPerColumn","itemsInGrid_1","itemsInGrid_1_1","isFixed","lowestRowForItem","lowestRowForColumn","NgGridHelper.sortItemsByPositionHorizontal","lowestColumnPerRow","itemsInGrid_2","itemsInGrid_2_1","lowestColumnForItem","lowestOffsetColumn","maxRow","_getMaxRow","maxCol","_getMaxCol","fixLoop","itemsInPath","_getItemsInVerticalPath","nextRow","itemsInPath_1","itemsInPath_1_1","min","apply","map","_getItemsInHorizontalPath","nextCol","itemsInPath_2","itemsInPath_2_1","startColumn","startRow","allowExcessiveItems","_fixPosToBounds","_fixSizeToBounds","add","itemsRows","itemsCols","TouchEvent","touches","changedTouches","refPos","clientX","clientY","_getAbsoluteMousePosition","itemWidth","_getContainerRows","position","size","factory","resolveComponentFactory","componentRef","containerRef","createComponent","placeholder","itemOutput","filter","getEventOutput","element","_documentMousemove$","fromEvent","document","_documentMouseup$","_mousedown$","_mousemove$","_mouseup$","_touchstart$","_touchmove$","_touchend$","_enableMouseListeners","_isTouchDevice","_enableTouchListeners","subs","unsubscribe","navigator","maxTouchPoints","touchstartSubs","subscribe","touchmoveSubs","touchendSubs","documentMousemoveSubs","documentMouseupSubs","mousedownSubs","mousemoveSubs","mouseupSubs","draggable","resizable","max_cols","max_rows","visible_cols","visible_rows","col_width","row_height","min_width","min_height","fix_to_grid","auto_style","auto_resize","maintain_ratio","prefer_new","zoom_on_drag","limit_to_screen","center_to_screen","element_based_row_height","fix_item_position_direction","fix_collision_position_direction","Directive","inputs","host","(window:resize)","KeyValueDiffers","ComponentFactoryResolver","Output","NgGridItem","onDragAny","onResizeAny","onChangeStart","onChange","onChangeStop","onChangeAny","ngGridItemChange","isDraggable","isResizable","_currentPosition","_userConfig","_added","_minCols","_minRows","configObject","event","onConfigChangeEvent","addClass","setStyle","_dragHandle","findHandle","target","handleSelector","startElement","targetElem","elementMatches","parentElement","err","_resizeHandle","resizeDirections_1","resizeDirections_1_1","direction","_borderSize","_elemWidth","_elemHeight","cursor","getElement","getDragHandle","getResizeHandle","_elemLeft","_elemTop","_payload","payload","dragHandle","resizeHandle","borderSize","fixed","isNaN","isFinite","update","gridPosition","style","getComputedStyle","getPropertyValue","removeClass","matches","oMatchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","ownerDocument","querySelectorAll","newWidth","newHeight","originalEvent","oe","changed","changeCheck","Renderer2","ViewContainerRef","NgGridModule","NgModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgGridItem } from \"../directives/NgGridItem\";\r\n\r\nexport function generateUuid(): string {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t\tvar r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n\t\treturn v.toString(16);\r\n\t});\r\n}\r\n\r\nexport function sortItemsByPositionHorizontal(a: NgGridItem, b: NgGridItem): number {\r\n\tif (a.col === b.col) { return a.row - b.row; }\r\n\treturn a.col - b.col;\r\n}\r\n\r\nexport function sortItemsByPositionVertical(a: NgGridItem, b: NgGridItem): number {\r\n\tif (a.row === b.row) { return a.col - b.col; }\r\n\treturn a.row - b.row;\r\n}","import { NgGrid } from '../directives/NgGrid';\r\nimport { NgGridItem } from '../directives/NgGridItem';\r\nimport { NgGridItemPosition, NgGridItemSize } from '../interfaces/INgGrid';\r\nimport { Component, Directive, ElementRef, Renderer, EventEmitter, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'ng-grid-placeholder',\r\n\ttemplate: ''\r\n})\r\nexport class NgGridPlaceholder implements OnInit {\r\n\tprivate _size: NgGridItemSize;\r\n\tprivate _position: NgGridItemPosition;\r\n\tprivate _ngGrid: NgGrid;\r\n\tprivate _cascadeMode: string;\r\n\r\n\tconstructor(private _ngEl: ElementRef, private _renderer: Renderer) { }\r\n\r\n\tpublic registerGrid(ngGrid: NgGrid) {\r\n\t\tthis._ngGrid = ngGrid;\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.setElementClass(this._ngEl.nativeElement, 'grid-placeholder', true);\r\n\t\tif (this._ngGrid.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'absolute');\r\n\t}\r\n\r\n\tpublic setSize(newSize: NgGridItemSize): void {\r\n\t\tthis._size = newSize;\r\n\t\tthis._recalculateDimensions();\r\n\t}\r\n\r\n\tpublic setGridPosition(newPosition: NgGridItemPosition): void {\r\n\t\tthis._position = newPosition;\r\n\t\tthis._recalculatePosition();\r\n\t}\r\n\r\n\tpublic setCascadeMode(cascade: string): void {\r\n\t\tthis._cascadeMode = cascade;\r\n\t\tswitch (cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'left':\r\n\t\t\tdefault:\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'left', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'top', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'right', null);\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', null);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'right', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'top', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'left', null);\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', null);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'left', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', '0px');\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'right', null);\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'top', null);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//\tPrivate methods\r\n\tprivate _setDimensions(w: number, h: number): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'width', w + 'px');\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'height', h + 'px');\r\n\t}\r\n\r\n\tprivate _setPosition(x: number, y: number): void {\r\n\t\tswitch (this._cascadeMode) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'left':\r\n\t\t\tdefault:\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + y + 'px)');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + -x + 'px, ' + y + 'px)');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + -y + 'px)');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _recalculatePosition(): void {\r\n\t\tconst x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._position.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\r\n\t\tconst y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._position.row - 1) + this._ngGrid.marginTop;\r\n\t\tthis._setPosition(x, y);\r\n\t}\r\n\r\n\tprivate _recalculateDimensions(): void {\r\n\t\tconst w: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\r\n\t\tconst h: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\r\n\t\tthis._setDimensions(w, h);\r\n\t}\r\n}\r\n","import { Component, Directive, ElementRef, Renderer, EventEmitter, ComponentFactoryResolver, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\r\nimport { NgGridConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, NgConfigFixDirection } from '../interfaces/INgGrid';\r\nimport { NgGridItem } from './NgGridItem';\r\nimport * as NgGridHelper from \"../helpers/NgGridHelpers\";\r\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\r\nimport { Subscription, Observable, fromEvent } from 'rxjs';\r\n\r\n@Directive({\r\n\tselector: '[ngGrid]',\r\n\tinputs: ['config: ngGrid'],\r\n\thost: {\r\n\t\t'(window:resize)': 'resizeEventHandler($event)',\r\n\t}\r\n})\r\nexport class NgGrid implements OnInit, DoCheck, OnDestroy {\r\n\t//\tEvent Emitters\r\n\t@Output() public onDragStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onDrag: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onDragStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResizeStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResize: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResizeStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onItemChange: EventEmitter<Array<NgGridItemEvent>> = new EventEmitter<Array<NgGridItemEvent>>();\r\n\r\n\t//\tPublic variables\r\n\tpublic colWidth: number = 250;\r\n\tpublic rowHeight: number = 250;\r\n\tpublic minCols: number = 1;\r\n\tpublic minRows: number = 1;\r\n\tpublic marginTop: number = 10;\r\n\tpublic marginRight: number = 10;\r\n\tpublic marginBottom: number = 10;\r\n\tpublic marginLeft: number = 10;\r\n\tpublic screenMargin: number = 0;\r\n\tpublic isDragging: boolean = false;\r\n\tpublic isResizing: boolean = false;\r\n\tpublic autoStyle: boolean = true;\r\n\tpublic resizeEnable: boolean = true;\r\n\tpublic dragEnable: boolean = true;\r\n\tpublic cascade: string = 'up';\r\n\tpublic minWidth: number = 100;\r\n\tpublic minHeight: number = 100;\r\n\r\n\t//\tPrivate variables\r\n\tprivate _items: Map<string, NgGridItem> = new Map<string, NgGridItem>();\r\n\tprivate _draggingItem: NgGridItem = null;\r\n\tprivate _resizingItem: NgGridItem = null;\r\n\tprivate _resizeDirection: string = null;\r\n\tprivate _itemsInGrid: Set<string> = new Set<string>();\r\n\tprivate _containerWidth: number;\r\n\tprivate _containerHeight: number;\r\n\tprivate _maxCols: number = 0;\r\n\tprivate _maxRows: number = 0;\r\n\tprivate _visibleCols: number = 0;\r\n\tprivate _visibleRows: number = 0;\r\n\tprivate _setWidth: number = 250;\r\n\tprivate _setHeight: number = 250;\r\n\tprivate _posOffset: NgGridRawPosition = null;\r\n\tprivate _adding: boolean = false;\r\n\tprivate _placeholderRef: ComponentRef<NgGridPlaceholder> = null;\r\n\tprivate _fixToGrid: boolean = false;\r\n\tprivate _autoResize: boolean = false;\r\n\tprivate _differ: KeyValueDiffer<string, any>;\r\n\tprivate _destroyed: boolean = false;\r\n\tprivate _maintainRatio: boolean = false;\r\n\tprivate _aspectRatio: number;\r\n\tprivate _preferNew: boolean = false;\r\n\tprivate _zoomOnDrag: boolean = false;\r\n\tprivate _limitToScreen: boolean = false;\r\n\tprivate _centerToScreen: boolean = false;\r\n\tprivate _curMaxRow: number = 0;\r\n\tprivate _curMaxCol: number = 0;\r\n\tprivate _dragReady: boolean = false;\r\n\tprivate _resizeReady: boolean = false;\r\n\tprivate _elementBasedDynamicRowHeight: boolean = false;\r\n\tprivate _itemFixDirection: NgConfigFixDirection = \"cascade\";\r\n\tprivate _collisionFixDirection: NgConfigFixDirection = \"cascade\";\r\n\tprivate _cascadePromise: Promise<void>;\r\n\r\n\t// Events\r\n\tprivate _documentMousemove$: Observable<MouseEvent>;\r\n\tprivate _documentMouseup$: Observable<MouseEvent>;\r\n\tprivate _mousedown$: Observable<MouseEvent>;\r\n\tprivate _mousemove$: Observable<MouseEvent>;\r\n\tprivate _mouseup$: Observable<MouseEvent>;\r\n\tprivate _touchstart$: Observable<TouchEvent>;\r\n\tprivate _touchmove$: Observable<TouchEvent>;\r\n\tprivate _touchend$: Observable<TouchEvent>;\r\n\tprivate _subscriptions: Subscription[] = [];\r\n\r\n\tprivate _enabledListener: boolean = false;\r\n\r\n\t//\tDefault config\r\n\tprivate static CONST_DEFAULT_CONFIG: NgGridConfig = {\r\n\t\tmargins: [10],\r\n\t\tdraggable: true,\r\n\t\tresizable: true,\r\n\t\tmax_cols: 0,\r\n\t\tmax_rows: 0,\r\n\t\tvisible_cols: 0,\r\n\t\tvisible_rows: 0,\r\n\t\tcol_width: 250,\r\n\t\trow_height: 250,\r\n\t\tcascade: 'up',\r\n\t\tmin_width: 100,\r\n\t\tmin_height: 100,\r\n\t\tfix_to_grid: false,\r\n\t\tauto_style: true,\r\n\t\tauto_resize: false,\r\n\t\tmaintain_ratio: false,\r\n\t\tprefer_new: false,\r\n\t\tzoom_on_drag: false,\r\n\t\tlimit_to_screen: false,\r\n\t\tcenter_to_screen: false,\r\n\t\telement_based_row_height: false,\r\n\t\tfix_item_position_direction: \"cascade\",\r\n\t\tfix_collision_position_direction: \"cascade\",\r\n\t};\r\n\tprivate _config = NgGrid.CONST_DEFAULT_CONFIG;\r\n\r\n\t//\t[ng-grid] attribute handler\r\n\tset config(v: NgGridConfig) {\r\n\t\tif (v == null || typeof v !== \"object\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setConfig(v);\r\n\r\n\t\tif (this._differ == null && v != null) {\r\n\t\t\tthis._differ = this._differs.find(this._config).create();\r\n\t\t}\r\n\r\n\t\tthis._differ.diff(this._config);\r\n\t}\r\n\r\n\t//\tConstructor\r\n\tconstructor(\r\n\t\tprivate _differs: KeyValueDiffers,\r\n\t\tprivate _ngEl: ElementRef,\r\n\t\tprivate _renderer: Renderer,\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t) {\r\n\t\tthis._defineListeners();\r\n\t}\r\n\r\n\t//\tPublic methods\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.setElementClass(this._ngEl.nativeElement, 'grid', true);\r\n\t\tif (this.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'relative');\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroyed = true;\r\n\t\tthis._disableListeners();\r\n\t}\r\n\r\n\tpublic generateItemUid(): string {\r\n\t\tconst uid: string = NgGridHelper.generateUuid();\r\n\r\n\t\tif (this._items.has(uid)) {\r\n\t\t\treturn this.generateItemUid();\r\n\t\t}\r\n\r\n\t\treturn uid;\r\n\t}\r\n\r\n\tpublic setConfig(config: NgGridConfig): void {\r\n\t\tthis._config = config;\r\n\r\n\t\tvar maxColRowChanged = false;\r\n\t\tfor (var x in config) {\r\n\t\t\tvar val = config[x];\r\n\t\t\tvar intVal = !val ? 0 : parseInt(val);\r\n\r\n\t\t\tswitch (x) {\r\n\t\t\t\tcase 'margins':\r\n\t\t\t\t\tthis.setMargins(val);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'col_width':\r\n\t\t\t\t\tthis.colWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'row_height':\r\n\t\t\t\t\tthis.rowHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'auto_style':\r\n\t\t\t\t\tthis.autoStyle = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'auto_resize':\r\n\t\t\t\t\tthis._autoResize = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'draggable':\r\n\t\t\t\t\tthis.dragEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'resizable':\r\n\t\t\t\t\tthis.resizeEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'max_rows':\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxRows != intVal;\r\n\t\t\t\t\tthis._maxRows = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'max_cols':\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxCols != intVal;\r\n\t\t\t\t\tthis._maxCols = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'visible_rows':\r\n\t\t\t\t\tthis._visibleRows = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'visible_cols':\r\n\t\t\t\t\tthis._visibleCols = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_rows':\r\n\t\t\t\t\tthis.minRows = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_cols':\r\n\t\t\t\t\tthis.minCols = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_height':\r\n\t\t\t\t\tthis.minHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'min_width':\r\n\t\t\t\t\tthis.minWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'zoom_on_drag':\r\n\t\t\t\t\tthis._zoomOnDrag = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cascade':\r\n\t\t\t\t\tif (this.cascade != val) {\r\n\t\t\t\t\t\tthis.cascade = val;\r\n\t\t\t\t\t\tthis._cascadeGrid();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fix_to_grid':\r\n\t\t\t\t\tthis._fixToGrid = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'maintain_ratio':\r\n\t\t\t\t\tthis._maintainRatio = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'prefer_new':\r\n\t\t\t\t\tthis._preferNew = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'limit_to_screen':\r\n\t\t\t\t\tthis._limitToScreen = !this._autoResize && !!val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'center_to_screen':\r\n\t\t\t\t\tthis._centerToScreen = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'element_based_row_height':\r\n\t\t\t\t\tthis._elementBasedDynamicRowHeight = !!val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fix_item_position_direction':\r\n\t\t\t\t\tthis._itemFixDirection = val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'fix_collision_position_direction':\r\n\t\t\t\t\tthis._collisionFixDirection = val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.dragEnable || this.resizeEnable) {\r\n\t\t\tthis._enableListeners();\r\n\t\t} else {\r\n\t\t\tthis._disableListeners();\r\n\t\t}\r\n\r\n\t\tif (this._itemFixDirection === \"cascade\") {\r\n\t\t\tthis._itemFixDirection = this._getFixDirectionFromCascade();\r\n\t\t}\r\n\r\n\t\tif (this._collisionFixDirection === \"cascade\") {\r\n\t\t\tthis._collisionFixDirection = this._getFixDirectionFromCascade();\r\n\t\t}\r\n\r\n\t\tif (this._limitToScreen) {\r\n\t\t\tconst newMaxCols = this._getContainerColumns();\r\n\r\n\t\t\tif (this._maxCols != newMaxCols) {\r\n\t\t\t\tthis._maxCols = newMaxCols;\r\n\t\t\t\tmaxColRowChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._limitToScreen && this._centerToScreen) {\r\n\t\t\tthis.screenMargin = this._getScreenMargin();\r\n\t\t} else {\r\n\t\t\tthis.screenMargin = 0;\r\n\t\t}\r\n\r\n\t\tif (this._maintainRatio) {\r\n\t\t\tif (this.colWidth && this.rowHeight) {\r\n\t\t\t\tthis._aspectRatio = this.colWidth / this.rowHeight;\r\n\t\t\t} else {\r\n\t\t\t\tthis._maintainRatio = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (maxColRowChanged) {\r\n\t\t\tif (this._maxCols > 0 && this._maxRows > 0) {\t//\tCan't have both, prioritise on cascade\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\tthis._maxCols = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'up':\r\n\t\t\t\t\tcase 'down':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._maxRows = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._updatePositionsAfterMaxChange();\r\n\t\t}\r\n\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tvar maxWidth = this._maxCols * this.colWidth;\r\n\t\tvar maxHeight = this._maxRows * this.rowHeight;\r\n\r\n\t\tif (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\r\n\t\tif (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\r\n\r\n\t\tif (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\tif (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\r\n\r\n\t\tif (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\r\n\t\tif (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t\titem.setCascadeMode(this.cascade);\r\n\t\t});\r\n\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\titem.recalculateSelf();\r\n\t\t\tthis._addToGrid(item);\r\n\t\t});\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic getItemPosition(itemId: string): NgGridItemPosition {\r\n\t\treturn this._items.has(itemId) ? this._items.get(itemId).getGridPosition() : null;\r\n\t}\r\n\r\n\tpublic getItemSize(itemId: string): NgGridItemSize {\r\n\t\treturn this._items.has(itemId) ? this._items.get(itemId).getSize() : null;\r\n\t}\r\n\r\n\tpublic ngDoCheck(): boolean {\r\n\t\tif (this._differ != null) {\r\n\t\t\tvar changes = this._differ.diff(this._config);\r\n\r\n\t\t\tif (changes != null) {\r\n\t\t\t\tthis._applyChanges(changes);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic setMargins(margins: Array<string>): void {\r\n\t\tthis.marginTop = Math.max(parseInt(margins[0]), 0);\r\n\t\tthis.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1]), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2]), 0) : this.marginTop;\r\n\t\tthis.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3]), 0) : this.marginRight;\r\n\t}\r\n\r\n\tpublic enableDrag(): void {\r\n\t\tthis.dragEnable = true;\r\n\t}\r\n\r\n\tpublic disableDrag(): void {\r\n\t\tthis.dragEnable = false;\r\n\t}\r\n\r\n\tpublic enableResize(): void {\r\n\t\tthis.resizeEnable = true;\r\n\t}\r\n\r\n\tpublic disableResize(): void {\r\n\t\tthis.resizeEnable = false;\r\n\t}\r\n\r\n\tpublic addItem(ngItem: NgGridItem): void {\r\n\t\tngItem.setCascadeMode(this.cascade);\r\n\r\n\t\tif (!this._preferNew) {\r\n\t\t\tvar newPos = this._fixGridPosition(ngItem.getGridPosition(), ngItem.getSize());\r\n\t\t\tngItem.setGridPosition(newPos);\r\n\t\t}\r\n\r\n\t\tif (ngItem.uid === null || this._items.has(ngItem.uid)) {\r\n\t\t\tngItem.uid = this.generateItemUid();\r\n\t\t}\r\n\r\n\t\tthis._items.set(ngItem.uid, ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tngItem.recalculateSelf();\r\n\t\t\tngItem.onCascadeEvent();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic removeItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\r\n\t\tthis._items.delete(ngItem.uid);\r\n\r\n\t\tif (this._destroyed) return;\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tthis._updateSize();\r\n\t\t\tthis._items.forEach((item: NgGridItem) => item.recalculateSelf());\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tthis._updateSize();\r\n\t\t\tngItem.onCascadeEvent();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic triggerCascade(): Promise<void> {\r\n\t\tif (!this._cascadePromise) {\r\n\t\t\tthis._cascadePromise = new Promise<void>((resolve: () => void) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis._cascadePromise = null;\r\n\t\t\t\t\tthis._cascadeGrid(null, null);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}, 0);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this._cascadePromise;\r\n\t}\r\n\r\n\tpublic triggerResize(): void {\r\n\t\tthis.resizeEventHandler(null);\r\n\t}\r\n\r\n\tpublic resizeEventHandler(e: any): void {\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tif (this._limitToScreen) {\r\n\t\t\tconst newMaxColumns = this._getContainerColumns();\r\n\t\t\tif (this._maxCols !== newMaxColumns) {\r\n\t\t\t\tthis._maxCols = newMaxColumns;\r\n\t\t\t\tthis._updatePositionsAfterMaxChange();\r\n\t\t\t\tthis._cascadeGrid();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._centerToScreen) {\r\n\t\t\t\tthis.screenMargin = this._getScreenMargin();\r\n\r\n\t\t\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\t\t\titem.recalculateSelf();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (this._autoResize) {\r\n\t\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\t\titem.recalculateSelf();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic mouseDownEventHandler(e: MouseEvent | TouchEvent): void {\r\n\t\tvar mousePos = this._getMousePosition(e);\r\n\t\tvar item = this._getItemFromPosition(mousePos);\r\n\r\n\t\tif (item == null) return;\r\n\r\n\t\tconst resizeDirection: string = item.canResize(e);\r\n\r\n\t\tif (this.resizeEnable && resizeDirection) {\r\n\t\t\tthis._resizeReady = true;\r\n\t\t\tthis._resizingItem = item;\r\n\t\t\tthis._resizeDirection = resizeDirection;\r\n\r\n\t\t\te.preventDefault();\r\n\t\t} else if (this.dragEnable && item.canDrag(e)) {\r\n\t\t\tthis._dragReady = true;\r\n\t\t\tthis._draggingItem = item;\r\n\r\n\t\t\tconst itemPos = item.getPosition();\r\n\t\t\tthis._posOffset = { 'left': (mousePos.left - itemPos.left), 'top': (mousePos.top - itemPos.top) }\r\n\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseUpEventHandler(e: MouseEvent | TouchEvent): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._dragStop(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resizeStop(e);\r\n\t\t} else if (this._dragReady || this._resizeReady) {\r\n\t\t\tthis._cleanDrag();\r\n\t\t\tthis._cleanResize();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseMoveEventHandler(e: MouseEvent | TouchEvent): void {\r\n\t\tif (this._resizeReady) {\r\n\t\t\tthis._resizeStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t} else if (this._dragReady) {\r\n\t\t\tthis._dragStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._drag(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resize(e);\r\n\t\t} else {\r\n\t\t\tvar mousePos = this._getMousePosition(e);\r\n\t\t\tvar item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.onMouseMove(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//\tPrivate methods\r\n\tprivate _getFixDirectionFromCascade(): NgConfigFixDirection {\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase \"up\":\r\n\t\t\tcase \"down\":\r\n\t\t\t\treturn \"vertical\";\r\n\t\t\tcase \"left\":\r\n\t\t\tcase \"right\":\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"horizontal\";\r\n\t\t}\r\n\t}\r\n\tprivate _updatePositionsAfterMaxChange(): void {\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\tvar pos = item.getGridPosition();\r\n\t\t\tvar dims = item.getSize();\r\n\r\n\t\t\tif (!this._hasGridCollision(pos, dims) && this._isWithinBounds(pos, dims) && dims.x <= this._maxCols && dims.y <= this._maxRows) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\tif (this._maxCols > 0 && dims.x > this._maxCols) {\r\n\t\t\t\tdims.x = this._maxCols;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t} else if (this._maxRows > 0 && dims.y > this._maxRows) {\r\n\t\t\t\tdims.y = this._maxRows;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims, true)) {\r\n\t\t\t\tvar newPosition = this._fixGridPosition(pos, dims);\r\n\t\t\t\titem.setGridPosition(newPosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._addToGrid(item);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _calculateColWidth(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxCols > 0 || this._visibleCols > 0) {\r\n\t\t\t\tvar maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\r\n\t\t\t\tvar maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\r\n\t\t\t\tvar colWidth: number = Math.floor(maxWidth / maxCols);\r\n\t\t\t\tcolWidth -= (this.marginLeft + this.marginRight);\r\n\t\t\t\tif (colWidth > 0) this.colWidth = colWidth;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\r\n\t\t\tthis.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateRowHeight(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxRows > 0 || this._visibleRows > 0) {\r\n\t\t\t\tvar maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\r\n\t\t\t\tlet maxHeight: number;\r\n\r\n\t\t\t\tif (this._elementBasedDynamicRowHeight) {\r\n\t\t\t\t\tmaxHeight = this._ngEl.nativeElement.getBoundingClientRect().height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaxHeight = window.innerHeight - this.marginTop - this.marginBottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\r\n\t\t\t\trowHeight -= (this.marginTop + this.marginBottom);\r\n\t\t\t\tif (rowHeight > 0) this.rowHeight = rowHeight;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\r\n\t\t\tthis.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateRatio(): void {\r\n\t\tif (!this._autoResize || !this._maintainRatio) return;\r\n\r\n\t\tif (this._maxCols > 0 && this._visibleRows <= 0) {\r\n\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t} else if (this._maxRows > 0 && this._visibleCols <= 0) {\r\n\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t} else if (this._maxCols == 0 && this._maxRows == 0) {\r\n\t\t\tif (this._visibleCols > 0) {\r\n\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t} else if (this._visibleRows > 0) {\r\n\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _applyChanges(changes: any): void {\r\n\t\tchanges.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\r\n\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tprivate _resizeStart(e: any): void {\r\n\t\tif (!this.resizeEnable || !this._resizingItem) return;\r\n\r\n\t\t//\tSetup\r\n\t\tthis._resizingItem.startMoving();\r\n\t\tthis._removeFromGrid(this._resizingItem);\r\n\t\tthis._createPlaceholder(this._resizingItem);\r\n\r\n\t\t//\tStatus Flags\r\n\t\tthis.isResizing = true;\r\n\t\tthis._resizeReady = false;\r\n\r\n\t\t//\tEvents\r\n\t\tthis.onResizeStart.emit(this._resizingItem);\r\n\t\tthis._resizingItem.onResizeStartEvent();\r\n\t}\r\n\r\n\tprivate _dragStart(e: any): void {\r\n\t\tif (!this.dragEnable || !this._draggingItem) return;\r\n\r\n\t\t//\tStart dragging\r\n\t\tthis._draggingItem.startMoving();\r\n\t\tthis._removeFromGrid(this._draggingItem);\r\n\t\tthis._createPlaceholder(this._draggingItem);\r\n\r\n\t\t//\tStatus Flags\r\n\t\tthis.isDragging = true;\r\n\t\tthis._dragReady = false;\r\n\r\n\t\t//\tEvents\r\n\t\tthis.onDragStart.emit(this._draggingItem);\r\n\t\tthis._draggingItem.onDragStartEvent();\r\n\r\n\t\t//\tZoom\r\n\t\tif (this._zoomOnDrag) {\r\n\t\t\tthis._zoomOut();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _zoomOut(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'scale(0.5, 0.5)');\r\n\t}\r\n\r\n\tprivate _resetZoom(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', '');\r\n\t}\r\n\r\n\tprivate _drag(e: any): void {\r\n\t\tif (!this.isDragging) return;\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if ((<any>document).selection) {\r\n\t\t\t(<any>document).selection.empty();\r\n\t\t}\r\n\r\n\t\tvar mousePos = this._getMousePosition(e);\r\n\t\tvar newL = (mousePos.left - this._posOffset.left);\r\n\t\tvar newT = (mousePos.top - this._posOffset.top);\r\n\r\n\t\tvar itemPos = this._draggingItem.getGridPosition();\r\n\t\tvar gridPos = this._calculateGridPosition(newL, newT);\r\n\t\tvar dims = this._draggingItem.getSize();\r\n\r\n\t\tgridPos = this._fixPosToBoundsX(gridPos, dims);\r\n\r\n\t\tif (!this._isWithinBoundsY(gridPos, dims)) {\r\n\t\t\tgridPos = this._fixPosToBoundsY(gridPos, dims);\r\n\t\t}\r\n\r\n\t\tif (gridPos.col != itemPos.col || gridPos.row != itemPos.row) {\r\n\t\t\tthis._draggingItem.setGridPosition(gridPos, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setGridPosition(gridPos);\r\n\r\n\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\tthis._fixGridCollisions(gridPos, dims);\r\n\t\t\t\tthis._cascadeGrid(gridPos, dims);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._fixToGrid) {\r\n\t\t\tthis._draggingItem.setPosition(newL, newT);\r\n\t\t}\r\n\r\n\t\tthis.onDrag.emit(this._draggingItem);\r\n\t\tthis._draggingItem.onDragEvent();\r\n\t}\r\n\r\n\tprivate _resize(e: any): void {\r\n\t\tif (!this.isResizing) { return; }\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if ((<any>document).selection) {\r\n\t\t\t(<any>document).selection.empty();\r\n\t\t}\r\n\r\n\t\tconst mousePos = this._getMousePosition(e);\r\n\t\tconst itemPos = this._resizingItem.getPosition();\r\n\t\tconst itemDims = this._resizingItem.getDimensions();\r\n\t\tconst endCorner = {\r\n\t\t\tleft: itemPos.left + itemDims.width,\r\n\t\t\ttop: itemPos.top + itemDims.height,\r\n\t\t}\r\n\r\n\t\tconst resizeTop = this._resizeDirection.includes('top');\r\n\t\tconst resizeBottom = this._resizeDirection.includes('bottom');\r\n\t\tconst resizeLeft = this._resizeDirection.includes('left')\r\n\t\tconst resizeRight = this._resizeDirection.includes('right');\r\n\r\n\t\t//\tCalculate new width and height based upon resize direction\r\n\t\tlet newW = resizeRight\r\n\t\t\t? (mousePos.left - itemPos.left + 1)\r\n\t\t\t: resizeLeft\r\n\t\t\t\t? (endCorner.left - mousePos.left + 1)\r\n\t\t\t\t: itemDims.width;\r\n\t\tlet newH = resizeBottom\r\n\t\t\t? (mousePos.top - itemPos.top + 1)\r\n\t\t\t: resizeTop\r\n\t\t\t\t? (endCorner.top - mousePos.top + 1)\r\n\t\t\t\t: itemDims.height;\r\n\r\n\t\tif (newW < this.minWidth)\r\n\t\t\tnewW = this.minWidth;\r\n\t\tif (newH < this.minHeight)\r\n\t\t\tnewH = this.minHeight;\r\n\t\tif (newW < this._resizingItem.minWidth)\r\n\t\t\tnewW = this._resizingItem.minWidth;\r\n\t\tif (newH < this._resizingItem.minHeight)\r\n\t\t\tnewH = this._resizingItem.minHeight;\r\n\r\n\t\tlet newX = itemPos.left;\r\n\t\tlet newY = itemPos.top;\r\n\r\n\t\tif (resizeLeft)\r\n\t\t\tnewX = endCorner.left - newW;\r\n\t\tif (resizeTop)\r\n\t\t\tnewY = endCorner.top - newH;\r\n\r\n\t\tlet calcSize = this._calculateGridSize(newW, newH);\r\n\t\tconst itemSize = this._resizingItem.getSize();\r\n\t\tconst iGridPos = this._resizingItem.getGridPosition();\r\n\t\tconst bottomRightCorner = {\r\n\t\t\tcol: iGridPos.col + itemSize.x,\r\n\t\t\trow: iGridPos.row + itemSize.y,\r\n\t\t};\r\n\t\tconst targetPos: NgGridItemPosition = Object.assign({}, iGridPos);\r\n\r\n\t\tif (this._resizeDirection.includes(\"top\"))\r\n\t\t\ttargetPos.row = bottomRightCorner.row - calcSize.y;\r\n\t\tif (this._resizeDirection.includes(\"left\"))\r\n\t\t\ttargetPos.col = bottomRightCorner.col - calcSize.x;\r\n\r\n\t\tif (!this._isWithinBoundsX(targetPos, calcSize))\r\n\t\t\tcalcSize = this._fixSizeToBoundsX(targetPos, calcSize);\r\n\r\n\t\tif (!this._isWithinBoundsY(targetPos, calcSize))\r\n\t\t\tcalcSize = this._fixSizeToBoundsY(targetPos, calcSize);\r\n\r\n\t\tcalcSize = this._resizingItem.fixResize(calcSize);\r\n\r\n\t\tif (calcSize.x != itemSize.x || calcSize.y != itemSize.y) {\r\n\t\t\tthis._resizingItem.setGridPosition(targetPos, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setGridPosition(targetPos);\r\n\t\t\tthis._resizingItem.setSize(calcSize, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setSize(calcSize);\r\n\r\n\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\tthis._fixGridCollisions(targetPos, calcSize);\r\n\t\t\t\tthis._cascadeGrid(targetPos, calcSize);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._fixToGrid) {\r\n\t\t\tthis._resizingItem.setDimensions(newW, newH);\r\n\t\t\tthis._resizingItem.setPosition(newX, newY);\r\n\t\t}\r\n\r\n\t\tthis.onResize.emit(this._resizingItem);\r\n\t\tthis._resizingItem.onResizeEvent();\r\n\t}\r\n\r\n\tprivate _dragStop(e: any): void {\r\n\t\tif (!this.isDragging) return;\r\n\r\n\t\tthis.isDragging = false;\r\n\r\n\t\tvar itemPos = this._draggingItem.getGridPosition();\r\n\r\n\t\tthis._draggingItem.setGridPosition(itemPos);\r\n\t\tthis._addToGrid(this._draggingItem);\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis._draggingItem.stopMoving();\r\n\t\tthis._draggingItem.onDragStopEvent();\r\n\t\tthis.onDragStop.emit(this._draggingItem);\r\n\r\n\t\tthis._cleanDrag();\r\n\t\tthis._placeholderRef.destroy();\r\n\r\n\t\tthis._emitOnItemChange();\r\n\r\n\t\tif (this._zoomOnDrag) {\r\n\t\t\tthis._resetZoom();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resizeStop(e: any): void {\r\n\t\tif (!this.isResizing) return;\r\n\r\n\t\tthis.isResizing = false;\r\n\r\n\t\tconst itemDims = this._resizingItem.getSize();\r\n\t\tthis._resizingItem.setSize(itemDims);\r\n\r\n\t\tconst itemPos = this._resizingItem.getGridPosition();\r\n\t\tthis._resizingItem.setGridPosition(itemPos);\r\n\r\n\t\tthis._addToGrid(this._resizingItem);\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis._resizingItem.stopMoving();\r\n\t\tthis._resizingItem.onResizeStopEvent();\r\n\t\tthis.onResizeStop.emit(this._resizingItem);\r\n\r\n\t\tthis._cleanResize();\r\n\t\tthis._placeholderRef.destroy();\r\n\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tprivate _cleanDrag(): void {\r\n\t\tthis._draggingItem = null;\r\n\t\tthis._posOffset = null;\r\n\t\tthis.isDragging = false;\r\n\t\tthis._dragReady = false;\r\n\t}\r\n\r\n\tprivate _cleanResize(): void {\r\n\t\tthis._resizingItem = null;\r\n\t\tthis._resizeDirection = null;\r\n\t\tthis.isResizing = false;\r\n\t\tthis._resizeReady = false;\r\n\t}\r\n\r\n\tprivate _calculateGridSize(width: number, height: number): NgGridItemSize {\r\n\t\twidth += this.marginLeft + this.marginRight;\r\n\t\theight += this.marginTop + this.marginBottom;\r\n\r\n\t\tvar sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\r\n\t\tvar sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\r\n\r\n\t\treturn { 'x': sizex, 'y': sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridPosition(left: number, top: number): NgGridItemPosition {\r\n\t\tvar col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\r\n\t\tvar row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: col, row: row }, { x: 1, y: 1 })) col = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: col, row: row }, { x: 1, y: 1 })) row = this._maxRows;\r\n\r\n\t\treturn { 'col': col, 'row': row };\r\n\t}\r\n\r\n\tprivate _hasGridCollision(pos: NgGridItemPosition, dims: NgGridItemSize): boolean {\r\n\t\tvar positions = this._getCollisions(pos, dims);\r\n\r\n\t\tif (positions == null || positions.length == 0) return false;\r\n\r\n\t\treturn positions.some((v: NgGridItem) => {\r\n\t\t\treturn !(v === null);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): Array<NgGridItem> {\r\n\t\tconst returns: Array<NgGridItem> = [];\r\n\r\n\t\tif (!pos.col) { pos.col = 1; }\r\n\t\tif (!pos.row) { pos.row = 1; }\r\n\r\n\t\tconst leftCol = pos.col;\r\n\t\tconst rightCol = pos.col + dims.x;\r\n\t\tconst topRow = pos.row;\r\n\t\tconst bottomRow = pos.row + dims.y;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item: NgGridItem = this._items.get(itemId);\r\n\r\n\t\t\tif (!item) {\r\n\t\t\t\tthis._itemsInGrid.delete(itemId);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst itemLeftCol = item.col;\r\n\t\t\tconst itemRightCol = item.col + item.sizex;\r\n\t\t\tconst itemTopRow = item.row;\r\n\t\t\tconst itemBottomRow = item.row + item.sizey;\r\n\r\n\t\t\tconst withinColumns = leftCol < itemRightCol && itemLeftCol < rightCol;\r\n\t\t\tconst withinRows = topRow < itemBottomRow && itemTopRow < bottomRow;\r\n\r\n\t\t\tif (withinColumns && withinRows) {\r\n\t\t\t\treturns.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tprivate _fixGridCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): void {\r\n\t\tconst collisions: Array<NgGridItem> = this._getCollisions(pos, dims);\r\n\t\tif (collisions.length === 0) { return; }\r\n\r\n\t\tfor (let collision of collisions) {\r\n\t\t\tthis._removeFromGrid(collision);\r\n\r\n\t\t\tconst itemDims: NgGridItemSize = collision.getSize();\r\n\t\t\tconst itemPos: NgGridItemPosition = collision.getGridPosition();\r\n\t\t\tlet newItemPos: NgGridItemPosition = { col: itemPos.col, row: itemPos.row };\r\n\r\n\t\t\tif (this._collisionFixDirection === \"vertical\") {\r\n\t\t\t\tnewItemPos.row = pos.row + dims.y;\r\n\r\n\t\t\t\tif (!this._isWithinBoundsY(newItemPos, itemDims)) {\r\n\t\t\t\t\tnewItemPos.col = pos.col + dims.x;\r\n\t\t\t\t\tnewItemPos.row = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._collisionFixDirection === \"horizontal\") {\r\n\t\t\t\tnewItemPos.col = pos.col + dims.x;\r\n\r\n\t\t\t\tif (!this._isWithinBoundsX(newItemPos, itemDims)) {\r\n\t\t\t\t\tnewItemPos.col = 1;\r\n\t\t\t\t\tnewItemPos.row = pos.row + dims.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcollision.setGridPosition(newItemPos);\r\n\r\n\t\t\tthis._fixGridCollisions(newItemPos, itemDims);\r\n\t\t\tthis._addToGrid(collision);\r\n\t\t\tcollision.onCascadeEvent();\r\n\t\t}\r\n\r\n\t\tthis._fixGridCollisions(pos, dims);\r\n\t}\r\n\r\n\tprivate _cascadeGrid(pos?: NgGridItemPosition, dims?: NgGridItemSize): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tif (!pos !== !dims) throw new Error('Cannot cascade with only position and not dimensions');\r\n\r\n\t\tif (this.isDragging && this._draggingItem && !pos && !dims) {\r\n\t\t\tpos = this._draggingItem.getGridPosition();\r\n\t\t\tdims = this._draggingItem.getSize();\r\n\t\t} else if (this.isResizing && this._resizingItem && !pos && !dims) {\r\n\t\t\tpos = this._resizingItem.getGridPosition();\r\n\t\t\tdims = this._resizingItem.getSize();\r\n\t\t}\r\n\r\n\t\tlet itemsInGrid: NgGridItem[] = Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId));\r\n\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'down':\r\n\t\t\t\titemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionVertical);\r\n\t\t\t\tconst lowestRowPerColumn: Map<number, number> = new Map<number, number>();\r\n\r\n\t\t\t\tfor (let item of itemsInGrid) {\r\n\t\t\t\t\tif (item.isFixed) continue;\r\n\r\n\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\tlet lowestRowForItem: number = lowestRowPerColumn.get(itemPos.col) || 1;\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < itemDims.x; i++) {\r\n\t\t\t\t\t\tconst lowestRowForColumn = lowestRowPerColumn.get(itemPos.col + i) || 1;\r\n\t\t\t\t\t\tlowestRowForItem = Math.max(lowestRowForColumn, lowestRowForItem);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst leftCol = itemPos.col;\r\n\t\t\t\t\tconst rightCol = itemPos.col + itemDims.x;\r\n\r\n\t\t\t\t\tif (pos && dims) {\r\n\t\t\t\t\t\tconst withinColumns = rightCol > pos.col && leftCol < (pos.col + dims.x);\r\n\r\n\t\t\t\t\t\tif (withinColumns) {          //\tIf our element is in one of the item's columns\r\n\t\t\t\t\t\t\tconst roomAboveItem = itemDims.y <= (pos.row - lowestRowForItem);\r\n\r\n\t\t\t\t\t\t\tif (!roomAboveItem) {                                                  //\tItem can't fit above our element\r\n\t\t\t\t\t\t\t\tlowestRowForItem = Math.max(lowestRowForItem, pos.row + dims.y);   //\tSet the lowest row to be below it\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newPos: NgGridItemPosition = { col: itemPos.col, row: lowestRowForItem };\r\n\r\n\t\t\t\t\t//\tWhat if it's not within bounds Y?\r\n\t\t\t\t\tif (lowestRowForItem != itemPos.row && this._isWithinBoundsY(newPos, itemDims)) {\t//\tIf the item is not already on this row move it up\r\n\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < itemDims.x; i++) {\r\n\t\t\t\t\t\tlowestRowPerColumn.set(itemPos.col + i, lowestRowForItem + itemDims.y);\t//\tUpdate the lowest row to be below the item\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\tcase 'right':\r\n\t\t\t\titemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionHorizontal);\r\n\t\t\t\tconst lowestColumnPerRow: Map<number, number> = new Map<number, number>();\r\n\r\n\t\t\t\tfor (let item of itemsInGrid) {\r\n\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\tlet lowestColumnForItem: number = lowestColumnPerRow.get(itemPos.row) || 1;\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < itemDims.y; i++) {\r\n\t\t\t\t\t\tlet lowestOffsetColumn: number = lowestColumnPerRow.get(itemPos.row + i) || 1;\r\n\t\t\t\t\t\tlowestColumnForItem = Math.max(lowestOffsetColumn, lowestColumnForItem);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst topRow = itemPos.row;\r\n\t\t\t\t\tconst bottomRow = itemPos.row + itemDims.y;\r\n\r\n\t\t\t\t\tif (pos && dims) {\r\n\t\t\t\t\t\tconst withinRows = bottomRow > pos.col && topRow < (pos.col + dims.x);\r\n\r\n\t\t\t\t\t\tif (withinRows) {          //\tIf our element is in one of the item's rows\r\n\t\t\t\t\t\t\tconst roomNextToItem = itemDims.x <= (pos.col - lowestColumnForItem);\r\n\r\n\t\t\t\t\t\t\tif (!roomNextToItem) {                                                      //\tItem can't fit next to our element\r\n\t\t\t\t\t\t\t\tlowestColumnForItem = Math.max(lowestColumnForItem, pos.col + dims.x);  //\tSet the lowest col to be the other side of it\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newPos: NgGridItemPosition = { col: lowestColumnForItem, row: itemPos.row };\r\n\r\n\t\t\t\t\tif (lowestColumnForItem != itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t//\tIf the item is not already on this col move it up\r\n\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < itemDims.y; i++) {\r\n\t\t\t\t\t\tlowestColumnPerRow.set(itemPos.row + i, lowestColumnForItem + itemDims.x);\t//\tUpdate the lowest col to be below the item\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fixGridPosition(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._hasGridCollision(pos, dims)) return pos;\r\n\r\n\t\tconst maxRow = this._maxRows === 0 ? this._getMaxRow() : this._maxRows;\r\n\t\tconst maxCol = this._maxCols === 0 ? this._getMaxCol() : this._maxCols;\r\n\t\tconst newPos = {\r\n\t\t\tcol: pos.col,\r\n\t\t\trow: pos.row,\r\n\t\t};\r\n\r\n\t\tif (this._itemFixDirection === \"vertical\") {\r\n\t\t\tfixLoop:\r\n\t\t\tfor (; newPos.col <= maxRow;) {\r\n\t\t\t\tconst itemsInPath = this._getItemsInVerticalPath(newPos, dims, newPos.row);\r\n\t\t\t\tlet nextRow = newPos.row;\r\n\r\n\t\t\t\tfor (let item of itemsInPath) {\r\n\t\t\t\t\tif (item.row - nextRow >= dims.y) {\r\n\t\t\t\t\t\tnewPos.row = nextRow;\r\n\t\t\t\t\t\tbreak fixLoop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextRow = item.row + item.sizey;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (maxRow - nextRow >= dims.y) {\r\n\t\t\t\t\tnewPos.row = nextRow;\r\n\t\t\t\t\tbreak fixLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewPos.col = Math.max(newPos.col + 1, Math.min.apply(Math, itemsInPath.map((item) => item.col + dims.x)));\r\n\t\t\t\tnewPos.row = 1;\r\n\t\t\t}\r\n\t\t} else if (this._itemFixDirection === \"horizontal\") {\r\n\t\t\tfixLoop:\r\n\t\t\tfor (; newPos.row <= maxRow;) {\r\n\t\t\t\tconst itemsInPath = this._getItemsInHorizontalPath(newPos, dims, newPos.col);\r\n\t\t\t\tlet nextCol = newPos.col;\r\n\r\n\t\t\t\tfor (let item of itemsInPath) {\r\n\t\t\t\t\tif (item.col - nextCol >= dims.x) {\r\n\t\t\t\t\t\tnewPos.col = nextCol;\r\n\t\t\t\t\t\tbreak fixLoop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextCol = item.col + item.sizex;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (maxCol - nextCol >= dims.x) {\r\n\t\t\t\t\tnewPos.col = nextCol;\r\n\t\t\t\t\tbreak fixLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewPos.row = Math.max(newPos.row + 1, Math.min.apply(Math, itemsInPath.map((item) => item.row + dims.y)));\r\n\t\t\t\tnewPos.col = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newPos;\r\n\t}\r\n\r\n\tprivate _getItemsInHorizontalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startColumn: number = 0): NgGridItem[] {\r\n\t\tconst itemsInPath: NgGridItem[] = [];\r\n\t\tconst topRow: number = pos.row + dims.y - 1;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (item.col + item.sizex - 1 < startColumn) { return; }    //\tItem falls after start column\r\n\t\t\tif (item.row > topRow) { return; }                          //\tItem falls above path\r\n\t\t\tif (item.row + item.sizey - 1 < pos.row) { return; }        //\tItem falls below path\r\n\t\t\titemsInPath.push(item);\r\n\t\t});\r\n\r\n\t\treturn itemsInPath;\r\n\t}\r\n\r\n\tprivate _getItemsInVerticalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startRow: number = 0): NgGridItem[] {\r\n\t\tconst itemsInPath: NgGridItem[] = [];\r\n\t\tconst rightCol: number = pos.col + dims.x - 1;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (item.row + item.sizey - 1 < startRow) { return; }   //\tItem falls above start row\r\n\t\t\tif (item.col > rightCol) { return; }                    //\tItem falls after path\r\n\t\t\tif (item.col + item.sizex - 1 < pos.col) { return; }    //\tItem falls before path\r\n\t\t\titemsInPath.push(item);\r\n\t\t});\r\n\r\n\t\treturn itemsInPath;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._maxCols == 0 || (allowExcessiveItems && pos.col == 1) || (pos.col + dims.x - 1) <= this._maxCols;\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tpos.col = Math.max(this._maxCols - (dims.x - 1), 1);\r\n\t\t\tpos.row ++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tdims.x = Math.max(this._maxCols - (pos.col - 1), 1);\r\n\t\t\tdims.y++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._maxRows == 0 || (allowExcessiveItems && pos.row == 1) || (pos.row + dims.y - 1) <= this._maxRows;\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tpos.row = Math.max(this._maxRows - (dims.y - 1), 1);\r\n\t\t\tpos.col++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tdims.y = Math.max(this._maxRows - (pos.row - 1), 1);\r\n\t\t\tdims.x++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBounds(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._isWithinBoundsX(pos, dims, allowExcessiveItems) && this._isWithinBoundsY(pos, dims, allowExcessiveItems);\r\n\t}\r\n\r\n\tprivate _fixPosToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\treturn this._fixPosToBoundsX(this._fixPosToBoundsY(pos, dims), dims);\r\n\t}\r\n\r\n\tprivate _fixSizeToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\treturn this._fixSizeToBoundsX(pos, this._fixSizeToBoundsY(pos, dims));\r\n\t}\r\n\r\n\tprivate _addToGrid(item: NgGridItem): void {\r\n\t\tlet pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\tthis._fixGridCollisions(pos, dims);\r\n\t\t\tpos = item.getGridPosition();\r\n\t\t}\r\n\r\n\t\tthis._itemsInGrid.add(item.uid);\r\n\t}\r\n\r\n\tprivate _removeFromGrid(item: NgGridItem): void {\r\n\t\tthis._itemsInGrid.delete(item.uid);\r\n\t}\r\n\r\n\tprivate _updateSize(): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tlet maxCol: number = this._getMaxCol();\r\n\t\tlet maxRow: number = this._getMaxRow();\r\n\r\n\t\tif (maxCol != this._curMaxCol || maxRow != this._curMaxRow) {\r\n\t\t\tthis._curMaxCol = maxCol;\r\n\t\t\tthis._curMaxRow = maxRow;\r\n\t\t}\r\n\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'width', '100%');//(maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\r\n\t\tif (!this._elementBasedDynamicRowHeight) {\r\n\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'height', (maxRow * (this.rowHeight + this.marginTop + this.marginBottom)) + 'px');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxRow(): number {\r\n\t\tconst itemsRows: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (!item) return 0;\r\n\t\t\treturn item.row + item.sizey - 1;\r\n\t\t});\r\n\r\n\t\treturn Math.max.apply(null, itemsRows);\r\n\t}\r\n\r\n\tprivate _getMaxCol(): number {\r\n\t\tconst itemsCols: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (!item) return 0;\r\n\t\t\treturn item.col + item.sizex - 1;\r\n\t\t});\r\n\r\n\t\treturn Math.max.apply(null, itemsCols);\r\n\t}\r\n\r\n\tprivate _getMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\tconst refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\r\n\r\n\t\tlet left: number = e.clientX - refPos.left;\r\n\t\tlet top: number = e.clientY - refPos.top;\r\n\r\n\t\tif (this.cascade == 'down') top = refPos.top + refPos.height - e.clientY;\r\n\t\tif (this.cascade == 'right') left = refPos.left + refPos.width - e.clientX;\r\n\r\n\t\tif (this.isDragging && this._zoomOnDrag) {\r\n\t\t\tleft *= 2;\r\n\t\t\ttop *= 2;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: left,\r\n\t\t\ttop: top\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getAbsoluteMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: e.clientX,\r\n\t\t\ttop: e.clientY\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getContainerColumns(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\tconst itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\r\n\t\treturn Math.floor(maxWidth / itemWidth);\r\n\t}\r\n\r\n\tprivate _getContainerRows(): number {\r\n\t\tconst maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\r\n\t\treturn Math.floor(maxHeight / (this.rowHeight + this.marginTop + this.marginBottom));\r\n\t}\r\n\r\n\tprivate _getScreenMargin(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\tconst itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\r\n\t\treturn Math.floor((maxWidth - (this._maxCols * itemWidth)) / 2);;\r\n\t}\r\n\r\n\tprivate _getItemFromPosition(position: NgGridRawPosition): NgGridItem {\r\n\t\treturn Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId)).find((item: NgGridItem) => {\r\n\t\t\tif (!item) return false;\r\n\r\n\t\t\tconst size: NgGridItemDimensions = item.getDimensions();\r\n\t\t\tconst pos: NgGridRawPosition = item.getPosition();\r\n\r\n\t\t\treturn position.left >= pos.left && position.left < (pos.left + size.width) &&\r\n\t\t\tposition.top >= pos.top && position.top < (pos.top + size.height);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _createPlaceholder(item: NgGridItem): void {\r\n\t\tconst pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n\t\tconst factory = this.componentFactoryResolver.resolveComponentFactory(NgGridPlaceholder);\r\n\t\tvar componentRef: ComponentRef<NgGridPlaceholder> = item.containerRef.createComponent(factory);\r\n\t\tthis._placeholderRef = componentRef;\r\n\t\tconst placeholder: NgGridPlaceholder = componentRef.instance;\r\n\t\tplaceholder.registerGrid(this);\r\n\t\tplaceholder.setCascadeMode(this.cascade);\r\n\t\tplaceholder.setGridPosition({ col: pos.col, row: pos.row });\r\n\t\tplaceholder.setSize({ x: dims.x, y: dims.y });\r\n\t}\r\n\r\n\tprivate _emitOnItemChange() {\r\n\t\tconst itemOutput: any[] = Array.from(this._itemsInGrid)\r\n\t\t\t.map((itemId: string) => this._items.get(itemId))\r\n\t\t\t.filter((item: NgGridItem) => !!item)\r\n\t\t\t.map((item: NgGridItem) => item.getEventOutput());\r\n\r\n\t\tthis.onItemChange.emit(itemOutput);\r\n\t}\r\n\r\n\tprivate _defineListeners(): void {\r\n\t\tconst element = this._ngEl.nativeElement;\r\n\r\n\t\tthis._documentMousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\r\n\t\tthis._documentMouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\r\n\t\tthis._mousedown$ = fromEvent(element, 'mousedown');\r\n\t\tthis._mousemove$ = fromEvent(element, 'mousemove');\r\n\t\tthis._mouseup$ = fromEvent(element, 'mouseup');\r\n\t\tthis._touchstart$ = fromEvent(element, 'touchstart');\r\n\t\tthis._touchmove$ = fromEvent(element, 'touchmove');\r\n\t\tthis._touchend$ = fromEvent(element, 'touchend');\r\n\t}\r\n\r\n\tprivate _enableListeners(): void {\r\n\t\tif (this._enabledListener) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._enableMouseListeners();\r\n\r\n\t\tif (this._isTouchDevice()) {\r\n\t\t\tthis._enableTouchListeners();\r\n\t\t}\r\n\r\n\t\tthis._enabledListener = true;\r\n\t}\r\n\r\n\tprivate _disableListeners(): void {\r\n\t\tthis._subscriptions.forEach((subs: Subscription) => subs.unsubscribe());\r\n\t\tthis._enabledListener = false;\r\n\t}\r\n\r\n\tprivate _isTouchDevice(): boolean {\r\n\t\treturn 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n\t};\r\n\r\n\tprivate _enableTouchListeners(): void {\r\n\t\tconst touchstartSubs = this._touchstart$.subscribe((e: TouchEvent) => this.mouseDownEventHandler(e));\r\n\t\tconst touchmoveSubs = this._touchmove$.subscribe((e: TouchEvent) => this.mouseMoveEventHandler(e));\r\n\t\tconst touchendSubs = this._touchend$.subscribe((e: TouchEvent) => this.mouseUpEventHandler(e));\r\n\r\n\t\tthis._subscriptions.push(\r\n\t\t\ttouchstartSubs,\r\n\t\t\ttouchmoveSubs,\r\n\t\t\ttouchendSubs\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _enableMouseListeners(): void {\r\n\t\tconst documentMousemoveSubs = this._documentMousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\r\n\t\tconst documentMouseupSubs = this._documentMouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\r\n\t\tconst mousedownSubs = this._mousedown$.subscribe((e: MouseEvent) => this.mouseDownEventHandler(e));\r\n\t\tconst mousemoveSubs = this._mousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\r\n\t\tconst mouseupSubs = this._mouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\r\n\r\n\t\tthis._subscriptions.push(\r\n\t\t\tdocumentMousemoveSubs,\r\n\t\t\tdocumentMouseupSubs,\r\n\t\t\tmousedownSubs,\r\n\t\t\tmousemoveSubs,\r\n\t\t\tmouseupSubs\r\n\t\t);\r\n\t}\r\n}\r\n","import { NgGrid } from './NgGrid';\r\nimport { NgGridItemConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, ResizeHandle } from '../interfaces/INgGrid';\r\nimport { Directive, ElementRef, Renderer2, EventEmitter, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, ViewContainerRef, Output, DoCheck } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[ngGridItem]',\r\n\tinputs: ['config: ngGridItem']\r\n})\r\nexport class NgGridItem implements OnInit, OnDestroy, DoCheck {\r\n\t//\tEvent Emitters\r\n\t@Output() public onItemChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>(false);\r\n\t@Output() public onDragStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onDrag: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onDragStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onDragAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onResizeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onResize: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onResizeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onResizeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onChangeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onChangeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public onChangeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\r\n\t@Output() public ngGridItemChange: EventEmitter<NgGridItemConfig> = new EventEmitter<NgGridItemConfig>();\r\n\r\n\t//\tDefault config\r\n\tprivate static CONST_DEFAULT_CONFIG: NgGridItemConfig = {\r\n\t\tuid: null,\r\n\t\tcol: 1,\r\n\t\trow: 1,\r\n\t\tsizex: 1,\r\n\t\tsizey: 1,\r\n\t\tdragHandle: null,\r\n\t\tresizeHandle: null,\r\n\t\tfixed: false,\r\n\t\tdraggable: true,\r\n\t\tresizable: true,\r\n\t\tborderSize: 25\r\n\t};\r\n\r\n\tpublic isFixed: boolean = false;\r\n\tpublic isDraggable: boolean = true;\r\n\tpublic isResizable: boolean = true;\r\n\tpublic minWidth: number = 0;\r\n\tpublic minHeight: number = 0;\r\n\tpublic uid: string = null;\r\n\r\n\t//\tPrivate variables\r\n\tprivate _payload: any;\r\n\tprivate _currentPosition: NgGridItemPosition = { col: 1, row: 1 };\r\n\tprivate _size: NgGridItemSize = { x: 1, y: 1 };\r\n\tprivate _config = NgGridItem.CONST_DEFAULT_CONFIG;\r\n\tprivate _userConfig = null;\r\n\tprivate _dragHandle: string;\r\n\tprivate _resizeHandle: ResizeHandle;\r\n\tprivate _borderSize: number;\r\n\tprivate _elemWidth: number;\r\n\tprivate _elemHeight: number;\r\n\tprivate _elemLeft: number;\r\n\tprivate _elemTop: number;\r\n\tprivate _added: boolean = false;\r\n\tprivate _differ: KeyValueDiffer<string, any>;\r\n\tprivate _cascadeMode: string;\r\n\tprivate _maxCols: number = 0;\r\n\tprivate _minCols: number = 0;\r\n\tprivate _maxRows: number = 0;\r\n\tprivate _minRows: number = 0;\r\n\r\n\t//\t[ng-grid-item] handler\r\n\tset config(v: NgGridItemConfig) {\r\n\t\tthis._userConfig = v;\r\n\r\n\t\tconst configObject = Object.assign({}, NgGridItem.CONST_DEFAULT_CONFIG, v);\r\n\t\tfor (let x in NgGridItem.CONST_DEFAULT_CONFIG)\r\n\t\t\tif (configObject[x] == null)\r\n\t\t\t\tconfigObject[x] = NgGridItem.CONST_DEFAULT_CONFIG[x];\r\n\r\n\t\tthis.setConfig(configObject);\r\n\r\n\t\tif (this._userConfig != null) {\r\n\t\t\tif (this._differ == null) {\r\n\t\t\t\tthis._differ = this._differs.find(this._userConfig).create();\r\n\t\t\t}\r\n\r\n\t\t\tthis._differ.diff(this._userConfig);\r\n\t\t}\r\n\r\n\t\tif (!this._added) {\r\n\t\t\tthis._added = true;\r\n\t\t\tthis._ngGrid.addItem(this);\r\n\t\t}\r\n\r\n\t\tthis._recalculateDimensions();\r\n\t\tthis._recalculatePosition();\r\n\t}\r\n\r\n\tget sizex(): number {\r\n\t\treturn this._size.x;\r\n\t}\r\n\r\n\tget sizey(): number {\r\n\t\treturn this._size.y;\r\n\t}\r\n\r\n\tget col(): number {\r\n\t\treturn this._currentPosition.col;\r\n\t}\r\n\r\n\tget row(): number {\r\n\t\treturn this._currentPosition.row;\r\n\t}\r\n\r\n\tget currentCol(): number {\r\n\t\treturn this._currentPosition.col;\r\n\t}\r\n\r\n\tget currentRow(): number {\r\n\t\treturn this._currentPosition.row;\r\n\t}\r\n\r\n\t//\tConstructor\r\n\tconstructor(\r\n\t\tprivate _differs: KeyValueDiffers,\r\n\t\tprivate _ngEl: ElementRef,\r\n\t\tprivate _renderer: Renderer2,\r\n\t\tprivate _ngGrid: NgGrid,\r\n\t\tpublic containerRef: ViewContainerRef,\r\n\t) { }\r\n\r\n\tpublic onResizeStartEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onResizeStart.emit(event);\r\n\t\tthis.onResizeAny.emit(event);\r\n\t\tthis.onChangeStart.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\t}\r\n\tpublic onResizeEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onResize.emit(event);\r\n\t\tthis.onResizeAny.emit(event);\r\n\t\tthis.onChange.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\t}\r\n\tpublic onResizeStopEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onResizeStop.emit(event);\r\n\t\tthis.onResizeAny.emit(event);\r\n\t\tthis.onChangeStop.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\r\n\t\tthis.onConfigChangeEvent();\r\n\t}\r\n\tpublic onDragStartEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onDragStart.emit(event);\r\n\t\tthis.onDragAny.emit(event);\r\n\t\tthis.onChangeStart.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\t}\r\n\tpublic onDragEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onDrag.emit(event);\r\n\t\tthis.onDragAny.emit(event);\r\n\t\tthis.onChange.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\t}\r\n\tpublic onDragStopEvent(): void {\r\n\t\tconst event: NgGridItemEvent = this.getEventOutput();\r\n\t\tthis.onDragStop.emit(event);\r\n\t\tthis.onDragAny.emit(event);\r\n\t\tthis.onChangeStop.emit(event);\r\n\t\tthis.onChangeAny.emit(event);\r\n\r\n\t\tthis.onConfigChangeEvent();\r\n\t}\r\n\tpublic onCascadeEvent(): void {\r\n\t\tthis.onConfigChangeEvent();\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.addClass(this._ngEl.nativeElement, 'grid-item');\r\n\t\tif (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'position', 'absolute');\r\n\t\tthis._recalculateDimensions();\r\n\t\tthis._recalculatePosition();\r\n\r\n\t\t//\tForce a config update in case there is no config assigned\r\n\t\tthis.config = this._userConfig;\r\n\t}\r\n\r\n\t//\tPublic methods\r\n\tpublic canDrag(e: any): boolean {\r\n\t\tif (!this.isDraggable) return false;\r\n\r\n\t\tif (this._dragHandle) {\r\n\t\t\treturn this.findHandle(this._dragHandle, e.target);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic findHandle(handleSelector: string, startElement: HTMLElement): boolean {\r\n\t\ttry {\r\n\t\t\tlet targetElem: any = startElement;\r\n\r\n\t\t\twhile (targetElem && targetElem != this._ngEl.nativeElement) {\r\n\t\t\t\tif (this.elementMatches(targetElem, handleSelector)) return true;\r\n\r\n\t\t\t\ttargetElem = targetElem.parentElement;\r\n\t\t\t}\r\n\t\t} catch (err) {}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic canResize(e: any): string {\r\n\t\tif (!this.isResizable) return null;\r\n\r\n\t\tif (this._resizeHandle) {\r\n\t\t\tif (typeof this._resizeHandle === \"string\") {\r\n\t\t\t\treturn this.findHandle(this._resizeHandle, e.target) ? 'bottomright' : null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof this._resizeHandle !== \"object\") return null;\r\n\r\n\t\t\tconst resizeDirections = [ 'bottomright', 'bottomleft', 'topright', 'topleft', 'right', 'left', 'bottom', 'top' ];\r\n\t\t\tfor (let direction of resizeDirections) {\r\n\t\t\t\tif (direction in this._resizeHandle) {\r\n\t\t\t\t\tif (this.findHandle(this._resizeHandle[direction], e.target)) {\r\n\t\t\t\t\t\treturn direction;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (this._borderSize <= 0) return null;\r\n\r\n\t\tconst mousePos: NgGridRawPosition = this._getMousePosition(e);\r\n\r\n\t\tif (mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\r\n\t\t\t&& mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize) {\r\n\t\t\treturn 'bottomright';\r\n\t\t} else if (mousePos.left < this._borderSize && mousePos.top < this._elemHeight\r\n\t\t\t&& mousePos.top > this._elemHeight - this._borderSize) {\r\n\t\t\treturn 'bottomleft';\r\n\t\t} else if (mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\r\n\t\t\t&& mousePos.top < this._borderSize) {\r\n\t\t\treturn 'topright';\r\n\t\t} else if (mousePos.left < this._borderSize && mousePos.top < this._borderSize) {\r\n\t\t\treturn 'topleft';\r\n\t\t} else if (mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize) {\r\n\t\t\treturn 'right';\r\n\t\t} else if (mousePos.left < this._borderSize) {\r\n\t\t\treturn 'left';\r\n\t\t} else if (mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize) {\r\n\t\t\treturn 'bottom';\r\n\t\t} else if (mousePos.top < this._borderSize) {\r\n\t\t\treturn 'top';\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic onMouseMove(e: any): void {\r\n\t\tif (this._ngGrid.autoStyle) {\r\n\t\t\tif (this._ngGrid.resizeEnable) {\r\n\t\t\t\tconst resizeDirection = this.canResize(e);\r\n\r\n\t\t\t\tlet cursor: string = \"default\";\r\n\t\t\t\tswitch (resizeDirection) {\r\n\t\t\t\t\tcase \"bottomright\":\r\n\t\t\t\t\tcase \"topleft\":\r\n\t\t\t\t\t\tcursor = \"nwse-resize\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"topright\":\r\n\t\t\t\t\tcase \"bottomleft\":\r\n\t\t\t\t\t\tcursor = \"nesw-resize\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tcursor = \"ns-resize\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tcursor = \"ew-resize\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (this._ngGrid.dragEnable && this.canDrag(e)) {\r\n\t\t\t\t\t\t\tcursor = 'move';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'cursor', cursor);\r\n\t\t\t} else if (this._ngGrid.dragEnable && this.canDrag(e)) {\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'move');\r\n\t\t\t} else {\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'default');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tif (this._added) this._ngGrid.removeItem(this);\r\n\t}\r\n\r\n\t//\tGetters\r\n\tpublic getElement(): ElementRef {\r\n\t\treturn this._ngEl;\r\n\t}\r\n\r\n\tpublic getDragHandle(): string {\r\n\t\treturn this._dragHandle;\r\n\t}\r\n\r\n\tpublic getResizeHandle(): ResizeHandle {\r\n\t\treturn this._resizeHandle;\r\n\t}\r\n\r\n\tpublic getDimensions(): NgGridItemDimensions {\r\n\t\treturn { 'width': this._elemWidth, 'height': this._elemHeight };\r\n\t}\r\n\r\n\tpublic getSize(): NgGridItemSize {\r\n\t\treturn this._size;\r\n\t}\r\n\r\n\tpublic getPosition(): NgGridRawPosition {\r\n\t\treturn { 'left': this._elemLeft, 'top': this._elemTop };\r\n\t}\r\n\r\n\tpublic getGridPosition(): NgGridItemPosition {\r\n\t\treturn this._currentPosition;\r\n\t}\r\n\r\n\t//\tSetters\r\n\tpublic setConfig(config: NgGridItemConfig): void {\r\n\t\tthis._config = config;\r\n\r\n\t\tthis._payload = config.payload;\r\n\t\tthis._currentPosition.col = config.col ? config.col : NgGridItem.CONST_DEFAULT_CONFIG.col;\r\n\t\tthis._currentPosition.row = config.row ? config.row : NgGridItem.CONST_DEFAULT_CONFIG.row;\r\n\t\tthis._size.x = config.sizex ? config.sizex : NgGridItem.CONST_DEFAULT_CONFIG.sizex;\r\n\t\tthis._size.y = config.sizey ? config.sizey : NgGridItem.CONST_DEFAULT_CONFIG.sizey;\r\n\t\tthis._dragHandle = config.dragHandle;\r\n\t\tthis._resizeHandle = config.resizeHandle;\r\n\t\tthis._borderSize = config.borderSize;\r\n\t\tthis.isDraggable = config.draggable ? true : false;\r\n\t\tthis.isResizable = config.resizable ? true : false;\r\n\t\tthis.isFixed = config.fixed ? true : false;\r\n\r\n\t\tthis._maxCols = !isNaN(config.maxCols) && isFinite(config.maxCols) ? config.maxCols : 0;\r\n\t\tthis._minCols = !isNaN(config.minCols) && isFinite(config.minCols) ? config.minCols : 0;\r\n\t\tthis._maxRows = !isNaN(config.maxRows) && isFinite(config.maxRows) ? config.maxRows : 0;\r\n\t\tthis._minRows = !isNaN(config.minRows) && isFinite(config.minRows) ? config.minRows : 0;\r\n\r\n\t\tthis.minWidth = !isNaN(config.minWidth) && isFinite(config.minWidth) ? config.minWidth : 0;\r\n\t\tthis.minHeight = !isNaN(config.minHeight) && isFinite(config.minHeight) ? config.minHeight : 0;\r\n\r\n\t\tif (this._minCols > 0 && this._maxCols > 0 && this._minCols > this._maxCols) this._minCols = 0;\r\n\t\tif (this._minRows > 0 && this._maxRows > 0 && this._minRows > this._maxRows) this._minRows = 0;\r\n\r\n\t\tif (this._added) {\r\n\t\t\tthis._ngGrid.updateItem(this);\r\n\t\t}\r\n\r\n\t\tthis._size = this.fixResize(this._size);\r\n\r\n\t\tthis._recalculatePosition();\r\n\t\tthis._recalculateDimensions();\r\n\t}\r\n\r\n\tpublic ngDoCheck(): boolean {\r\n\t\tif (this._differ != null) {\r\n\t\t\tconst changes: any = this._differ.diff(this._userConfig);\r\n\r\n\t\t\tif (changes != null) {\r\n\t\t\t\treturn this._applyChanges(changes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic setSize(newSize: NgGridItemSize, update: boolean = true): void {\r\n\t\tnewSize = this.fixResize(newSize);\r\n\t\tthis._size = newSize;\r\n\t\tif (update) this._recalculateDimensions();\r\n\r\n\t\tthis.onItemChange.emit(this.getEventOutput());\r\n\t}\r\n\r\n\tpublic setGridPosition(gridPosition: NgGridItemPosition, update: boolean = true): void {\r\n\t\tthis._currentPosition = gridPosition;\r\n\t\tif (update) this._recalculatePosition();\r\n\r\n\t\tthis.onItemChange.emit(this.getEventOutput());\r\n\t}\r\n\r\n\tpublic getEventOutput(): NgGridItemEvent {\r\n\t\treturn <NgGridItemEvent>{\r\n\t\t\tuid: this.uid,\r\n\t\t\tpayload: this._payload,\r\n\t\t\tcol: this._currentPosition.col,\r\n\t\t\trow: this._currentPosition.row,\r\n\t\t\tsizex: this._size.x,\r\n\t\t\tsizey: this._size.y,\r\n\t\t\twidth: this._elemWidth,\r\n\t\t\theight: this._elemHeight,\r\n\t\t\tleft: this._elemLeft,\r\n\t\t\ttop: this._elemTop\r\n\t\t};\r\n\t}\r\n\r\n\tpublic setPosition(x: number, y: number): void {\r\n\t\tswitch (this._cascadeMode) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'left':\r\n\t\t\tdefault:\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'right', x + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'bottom', y + 'px');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis._elemLeft = x;\r\n\t\tthis._elemTop = y;\r\n\t}\r\n\r\n\tpublic setCascadeMode(cascade: string): void {\r\n\t\tthis._cascadeMode = cascade;\r\n\t\tswitch (cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'left':\r\n\t\t\tdefault:\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'right', this._elemLeft + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'left', null);\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'bottom', this._elemTop + 'px');\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\r\n\t\t\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'top', null);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setDimensions(w: number, h: number): void {\r\n\t\tif (w < this.minWidth) w = this.minWidth;\r\n\t\tif (h < this.minHeight) h = this.minHeight;\r\n\r\n\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'width', w + 'px');\r\n\t\tthis._renderer.setStyle(this._ngEl.nativeElement, 'height', h + 'px');\r\n\r\n\t\tthis._elemWidth = w;\r\n\t\tthis._elemHeight = h;\r\n\t}\r\n\r\n\tpublic startMoving(): void {\r\n\t\tthis._renderer.addClass(this._ngEl.nativeElement, 'moving');\r\n\t\tconst style: any = window.getComputedStyle(this._ngEl.nativeElement);\r\n\t\tif (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) + 1).toString());\r\n\t}\r\n\r\n\tpublic stopMoving(): void {\r\n\t\tthis._renderer.removeClass(this._ngEl.nativeElement, 'moving');\r\n\t\tconst style: any = window.getComputedStyle(this._ngEl.nativeElement);\r\n\t\tif (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) - 1).toString());\r\n\t}\r\n\r\n\tpublic recalculateSelf(): void {\r\n\t\tthis._recalculatePosition();\r\n\t\tthis._recalculateDimensions();\r\n\t}\r\n\r\n\tpublic fixResize(newSize: NgGridItemSize): NgGridItemSize {\r\n\t\tif (this._maxCols > 0 && newSize.x > this._maxCols) newSize.x = this._maxCols;\r\n\t\tif (this._maxRows > 0 && newSize.y > this._maxRows) newSize.y = this._maxRows;\r\n\r\n\t\tif (this._minCols > 0 && newSize.x < this._minCols) newSize.x = this._minCols;\r\n\t\tif (this._minRows > 0 && newSize.y < this._minRows) newSize.y = this._minRows;\r\n\r\n\t\tconst itemWidth = (newSize.x * this._ngGrid.colWidth) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (newSize.x - 1));\r\n\t\tif (itemWidth < this.minWidth) newSize.x = Math.ceil((this.minWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft) / (this._ngGrid.colWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft));\r\n\r\n\t\tconst itemHeight = (newSize.y * this._ngGrid.rowHeight) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (newSize.y - 1));\r\n\t\tif (itemHeight < this.minHeight) newSize.y = Math.ceil((this.minHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop) / (this._ngGrid.rowHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop));\r\n\r\n\t\treturn newSize;\r\n\t}\r\n\r\n\t//\tPrivate methods\r\n\tprivate elementMatches(element: any, selector: string): boolean {\r\n\t\tif (!element) return false;\r\n\t\tif (element.matches) return element.matches(selector);\r\n\t\tif (element.oMatchesSelector) return element.oMatchesSelector(selector);\r\n\t\tif (element.msMatchesSelector) return element.msMatchesSelector(selector);\r\n\t\tif (element.mozMatchesSelector) return element.mozMatchesSelector(selector);\r\n\t\tif (element.webkitMatchesSelector) return element.webkitMatchesSelector(selector);\r\n\r\n\t\tif (!element.document || !element.ownerDocument) return false;\r\n\r\n\t\tconst matches: any = (element.document || element.ownerDocument).querySelectorAll(selector);\r\n\t\tlet i: number = matches.length;\r\n\t\twhile (--i >= 0 && matches.item(i) !== element) { }\r\n\t\treturn i > -1;\r\n\t}\r\n\r\n\tprivate _recalculatePosition(): void {\r\n\t\tconst x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._currentPosition.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\r\n\t\tconst y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._currentPosition.row - 1) + this._ngGrid.marginTop;\r\n\r\n\t\tthis.setPosition(x, y);\r\n\t}\r\n\r\n\tprivate _recalculateDimensions(): void {\r\n\t\tif (this._size.x < this._ngGrid.minCols) this._size.x = this._ngGrid.minCols;\r\n\t\tif (this._size.y < this._ngGrid.minRows) this._size.y = this._ngGrid.minRows;\r\n\r\n\t\tconst newWidth: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\r\n\t\tconst newHeight: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\r\n\r\n\t\tconst w: number = Math.max(this.minWidth, this._ngGrid.minWidth, newWidth);\r\n\t\tconst h: number = Math.max(this.minHeight, this._ngGrid.minHeight, newHeight);\r\n\r\n\t\tthis.setDimensions(w, h);\r\n\t}\r\n\r\n\tprivate _getMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (e.originalEvent && e.originalEvent.touches) {\r\n\t\t\tconst oe: any = e.originalEvent;\r\n\t\t\te = oe.touches.length ? oe.touches[0] : (oe.changedTouches.length ? oe.changedTouches[0] : e);\r\n\t\t} else if (e.touches) {\r\n\t\t\te = e.touches.length ? e.touches[0] : (e.changedTouches.length ? e.changedTouches[0] : e);\r\n\t\t}\r\n\r\n\r\n\t\tconst refPos: NgGridRawPosition = this._ngEl.nativeElement.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\tleft: e.clientX - refPos.left,\r\n\t\t\ttop: e.clientY - refPos.top\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _applyChanges(changes: any): boolean {\r\n\t\tlet changed: boolean = false;\r\n\t\tconst changeCheck = (record: any) => {\r\n\t\t\tif (this._config[record.key] !== record.currentValue) {\r\n\t\t\t\tthis._config[record.key] = record.currentValue;\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t};\r\n\t\tchanges.forEachAddedItem(changeCheck);\r\n\t\tchanges.forEachChangedItem(changeCheck);\r\n\t\tchanges.forEachRemovedItem((record: any) => {\r\n\t\t\tchanged = true;\r\n\t\t\tdelete this._config[record.key];\r\n\t\t});\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.setConfig(this._config);\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\tprivate onConfigChangeEvent() {\r\n\t\tif (this._userConfig === null) return;\r\n\r\n\t\tthis._config.sizex = this._userConfig.sizex = this._size.x;\r\n\t\tthis._config.sizey = this._userConfig.sizey = this._size.y;\r\n\t\tthis._config.col = this._userConfig.col = this._currentPosition.col;\r\n\t\tthis._config.row = this._userConfig.row = this._currentPosition.row;\r\n\t\tthis.ngGridItemChange.emit(this._userConfig);\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgGrid } from '../directives/NgGrid';\r\nimport { NgGridItem } from '../directives/NgGridItem';\r\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\r\n\r\n@NgModule({\r\n  declarations:     [ NgGrid, NgGridItem, NgGridPlaceholder ],\r\n  entryComponents:  [ NgGridPlaceholder ],\r\n  exports:          [ NgGrid, NgGridItem ]\r\n})\r\nexport class NgGridModule {}"]}